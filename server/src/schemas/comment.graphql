interface Comment {
    id: ID!
    authorId: ID!
    postId: ID!
    author: User!
    content: String!
    createdAt: String!
    updatedAt: String!
}

type BaseComment implements Comment {
    id: ID!
    authorId: ID!
    postId: ID!
    author: User!
    content: String!
    repliesCount: Int!
    createdAt: String!
    updatedAt: String!
}

type Reply implements Comment {
    id: ID!
    authorId: ID!
    postId: ID!
    author: User!
    content: String!
    createdAt: String!
    updatedAt: String!
}

type PaginatedBaseComments implements PaginatedList {
    baseComments: [BaseComment!]!
    hasMore: Boolean!
}

type PaginatedReplies implements PaginatedList {
    replies: [Reply!]!
    hasMore: Boolean!
}

type Query {
    baseComments(postId: ID!, options: PaginatedArgs!): PaginatedBaseComments!
    replies(parentCommentId: ID!, options: PaginatedArgs!): PaginatedReplies!
}

type Mutation {
    commentPost(postId: ID!, parentCommentId: ID, content: String!): Comment!
    editComment(commentId: ID!, postId: ID!, content: String!): Comment
    deleteComment(commentId: ID!, postId: ID!): Boolean!
}